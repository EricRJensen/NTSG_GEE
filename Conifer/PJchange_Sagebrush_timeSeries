/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var sagebrush = ee.FeatureCollection("users/smorford/sagebrush_biome"),
    image = ee.Image("USGS/NED"),
    geometry = 
    /* color: #23cba7 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-122.37197055355958, 49.31791745181596],
          [-122.37197055355958, 34.007079740288376],
          [-102.02529086605958, 34.007079740288376],
          [-102.02529086605958, 49.31791745181596]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// To do
// 1) Remove areas with negative change
// 2) Adjust color ramp (must be ADA accessible)
// 3) Mock-up basemap (Google options)
// 4) Remove regional mask
// 5) Add Sagebrush boundary to the map
// 6) Apply alpha channel to areas outside of Sagebrush biome

// ------------ Data preparation -------------------------------------
// -------------------------------------------------------------------

// Sagebrush Biome Mask
sagebrush = sagebrush.map(function(feat) {
  return feat.set('value',1)
})
var sageMask = sagebrush.reduceToImage(['value'], ee.Reducer.first());

// Inverse sagebrush biome mask
var sageMask_inv = ee.Image.constant(1).add(sageMask.unmask()).eq(1)

//NASS AND NLCD MASK
var nass = ee.ImageCollection("USDA/NASS/CDL")
var nassMask = nass.filterDate('2013-01-01','2099')
  .map(function(image) {
    return image.select('cultivated').eq(2)
    }).sum().eq(0);

// NLCD mask
var nlcd = ee.ImageCollection('USGS/NLCD')    
var nlcdMask = nlcd.filter(ee.Filter.eq('system:index', 'NLCD2016'))
  .select(0)
  .map(function(image) {
    return image.remap(
      [12, 31, 41, 42, 43, 51, 52, 71, 72, 73, 74, 81,90, 95],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]); 
  }).first().eq(1).unmask();

// BPS Mask 
var bps = ee.Image("users/smorford/bpsVegGroups");
var mappingMask = bps.gte(8).multiply(bps.lt(11)).multiply(nlcdMask).multiply(nassMask).remap([1],[1]);

// Import tree data
var tree_landtrendr = ee.ImageCollection("projects/rangeland-analysis-platform/treeExpansion/treeCoverTrends")
print(tree_landtrendr)

var treeCover = tree_landtrendr.map(function(image) { 
  return image.select(0).divide(100).updateMask(sageMask).updateMask(mappingMask)
    .rename('treeCoverPct')
    .copyProperties(image, ['system:time_start'])
    .copyProperties(image, ['system:index']);
})

var tree_all = treeCover.filterMetadata('system:index', 'greater_than', '1989')
// var tree_2000 = treeCover.filterMetadata('system:index', 'equals', '2000').first()
// var tree_2010 = treeCover.filterMetadata('system:index', 'equals', '2010').first()
// var tree_2019 = treeCover.filterMetadata('system:index', 'equals', '2019').first()

print(tree_all)

var yearStart = 1991
var yearEnd = 2019
for(var yr = yearStart; yr <= yearEnd; yr++){
  // Export the image, specifying scale and region.
  Export.image.toDrive({
    image: tree_all.filterMetadata('system:index', 'equals', yr.toString()).first().toInt8(),
    description: 'sageTree_' + yr +'_300',
    folder: 'RAP_exports',
    scale: 300,
    region: geometry.bounds(),
    maxPixels: 1e10
  });
}


// // Export images
// Export.image.toDrive({
//   image: tree_1990.toUint8(),
//   description: 'treeSage_1990_30',
//   scale: 30,
//   region: geometry,
//   maxPixels: 1e13
// });

// Export.image.toDrive({
//   image: tree_2000.toUint8(),
//   description: 'treeSage_2000_30',
//   scale: 30,
//   region: geometry,
//   maxPixels: 1e13
// });

// Export.image.toDrive({
//   image: tree_2010.toUint8(),
//   description: 'treeSage_2010_30',
//   scale: 30,
//   region: geometry,
//   maxPixels: 1e13
// });

// Export.image.toDrive({
//   image: tree_2019.toUint8(),
//   description: 'treeSage_2019_30',
//   scale: 30,
//   region: geometry,
//   maxPixels: 1e13
// });
